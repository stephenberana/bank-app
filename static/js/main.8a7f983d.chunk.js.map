{"version":3,"sources":["components/Login/submit-button.js","components/stores/UserSlice.js","components/Login/loginform.js","components/Dashboard/header.js","components/stores/AppReducer.js","components/stores/DepositTransaction.js","components/stores/WithdrawTransaction.js","components/Login/user-form.js","components/Login/validate-info.js","components/Login/register-link.js","components/stores/GlobalState.js","components/Dashboard/balance.js","components/Dashboard/amount-form.js","components/Dashboard/withdrawList.js","components/Dashboard/depositList.js","components/Dashboard/dashboard.js","components/App/app.js","reportWebVitals.js","components/App/store.js","index.js"],"names":["console","log","SubmitButton","className","React","Component","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","LoginForm","useState","setName","password","setPassword","dispatch","useDispatch","onSubmit","e","preventDefault","loggedIn","handleSubmit","style","fontWeight","type","placeholder","value","onChange","target","color","href","Header","useSelector","fontSize","depositTransactions","withdrawTransactions","filter","depositTransaction","id","withdrawTransaction","remainingBalance","values","DepositTransaction","deleteTransaction","useContext","GlobalContext","depositAmount","onClick","WithdrawTransaction","withdrawAmount","require","window","React2","React1","UserForm","validate","username","email","password2","setValues","errors","setErrors","handleChange","validateInfo","trim","test","length","RegisterNow","htmlFor","JSON","parse","localStorage","getItem","createContext","GlobalContextProvider","children","useReducer","AppReducer","useEffect","setItem","stringify","Provider","addDeposit","addWithdraw","totalBalance","storeInfo","Balance","depositAmounts","map","withdrawAmounts","reduce","acc","item","toFixed","AddTransaction","deposit","setDeposit","withdraw","setWithdraw","newDepositTransaction","uuidv4","autoComplete","newWithdrawTransaction","alert","WithdrawList","DepositList","Dashboard","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","userReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.8a7f983d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./login.css\";\r\n\r\nconsole.log(\"Submit Button clicked!\");\r\n\r\nclass SubmitButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\">\r\n        <button className=\"submitbtn\">Submit</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\nimport SubmitButton from \"./submit-button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../stores/UserSlice\";\r\n\r\nconst LoginForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      login({\r\n        name: name,\r\n        password: password,\r\n        loggedIn: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"loginForm\" onSubmit={(e) => handleSubmit(e)}>\r\n        <h1 className=\"header\">Bank of Wall Street</h1>\r\n        <h2 className=\"header\">Where money never sleeps.</h2>\r\n        <h3 style={{ fontWeight: \"normal\" }}>Log In</h3>\r\n\r\n        <input\r\n          className=\"inputField\"\r\n          type=\"name\"\r\n          placeholder=\"Username\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"inputField\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <div className=\"submitButton\">\r\n          <SubmitButton className=\"submitbtn\" type=\"button\" value=\"Login\" />\r\n        </div>\r\n        <div className=\"registerLink\">\r\n          <span className=\"form-input-signup\">\r\n            Not a member? <br />\r\n            <a style={{ color: \"white\" }} href=\"/register-link\">\r\n              Register here.\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../stores/UserSlice\";\r\n\r\nconst Header = () => {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className=\"dash-head-container\">\r\n      <h1 style={{ fontSize: 32 }}> Hi, {user.name}! </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_DEPOSIT\":\r\n      return {\r\n        ...state,\r\n        depositTransactions: [action.payload, ...state.depositTransactions],\r\n      };\r\n    case \"ADD_WITHDRAW\":\r\n      return {\r\n        ...state,\r\n        withdrawTransactions: [action.payload, ...state.withdrawTransactions],\r\n      };\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        depositTransactions: state.depositTransactions.filter(\r\n          (depositTransaction) => depositTransaction.id !== action.payload\r\n        ),\r\n        withdrawTransactions: state.withdrawTransactions.filter(\r\n          (withdrawTransaction) => withdrawTransaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"TOTAL_BALANCE\":\r\n      return {\r\n        ...state,\r\n        remainingBalance: [action.payload, ...state.remainingBalance],\r\n      };\r\n    case \"VALUES\":\r\n      return {\r\n        ...state,\r\n        values: [action.payload, ...state.values],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from './GlobalState'\r\n\r\nconst DepositTransaction = ({depositTransaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalContext)\r\n    return (\r\n        <div>\r\n            <li className=\"transaction\">\r\n                    <span className=\"transaction-amount\">\r\n                        ${depositTransaction.depositAmount}</span>\r\n                    <button className=\"delete-btn\" \r\n                    onClick={() => deleteTransaction(depositTransaction.id)}>\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepositTransaction","import React, {useContext} from 'react'\r\nimport {GlobalContext} from './GlobalState'\r\n\r\nconst WithdrawTransaction = ({withdrawTransaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalContext)\r\n    return (\r\n        <div>\r\n        <li className=\"transaction\">\r\n                    <span className=\"transaction-amount\">\r\n                        ${withdrawTransaction.withdrawAmount}\r\n                    </span>\r\n                    <button className=\"delete-btn\"\r\n                    onClick={() => deleteTransaction(withdrawTransaction.id)}>\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </li>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default WithdrawTransaction","import { useState} from \"react\";\r\n\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);\r\n\r\nfunction UserForm(validate) {\r\n    \r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })       \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setErrors(validate(values))\r\n    }\r\n\r\n        return {handleChange, values, handleSubmit, errors}\r\n    }\r\n    \r\n\r\nexport default UserForm","export default function validateInfo(values) {\r\n    let errors = {}\r\n\r\n    // username\r\n\r\n    if (!values.username.trim()) {\r\n        errors.username = \"Username required\"\r\n    }\r\n\r\n    // email\r\n\r\n    if (!values.email) {\r\n        errors.email = \"Email required\"\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n        errors.email = \"Email address is invalid\"\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Password is required'\r\n    } else if (values.password.length < 8) {\r\n        errors.password = 'Password needs to be 8 characters or more'\r\n    }\r\n\r\n    if (!values.password2) {\r\n        errors.password2 = 'Password is required'\r\n    } else if (values.password2 !== values.password) {\r\n        errors.password2 = 'Passwords do not match'\r\n    }\r\n\r\n    return errors\r\n}","import React from \"react\";\r\nimport UserForm from \"./user-form\";\r\nimport validate from \"./validate-info\";\r\nimport \"./Register.css\";\r\n\r\nconst RegisterNow = () => {\r\n  const { handleChange, values, handleSubmit, errors } = UserForm(validate);\r\n\r\n  return (\r\n    <div className=\"base-container\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"header\">\r\n          <h1>Create your account by filling out the information below.</h1>\r\n        </div>\r\n        {/* username */}\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"username\" className=\"form-label\">\r\n            Username\r\n          </label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your username...\"\r\n            value={values.username}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.username && <p>{errors.username}</p>}\r\n        </div>\r\n        {/* email      */}\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your email...\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        {/* password */}\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your password...\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        {/* confirmation of password */}\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password2\" className=\"form-label\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            id=\"password2\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your password...\"\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && <p>{errors.password2}</p>}\r\n        </div>\r\n        <div className=\"input-btn-cont\">\r\n          <button\r\n            className=\"form-input-btn\"\r\n            type=\"submit\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            Sign Up\r\n            {console.log(\"Submitted!\")}\r\n          </button>\r\n        </div>\r\n        <div className=\"register-footer\">\r\n          <span className=\"form-input-signup\">\r\n            Already a member? <br />\r\n            <a style={{ color: \"white\" }} href=\"/bank-app\">\r\n              Log in here.\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterNow;\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport DepositTransaction from \"./DepositTransaction\";\r\nimport WithdrawTransaction from \"./WithdrawTransaction\";\r\nimport Balance from \"../Dashboard/balance\";\r\nimport RegisterNow from \"../Login/register-link\";\r\n\r\nconst initialState = {\r\n  depositTransactions:\r\n    JSON.parse(localStorage.getItem(\"depositTransactions\")) || [],\r\n  withdrawTransactions:\r\n    JSON.parse(localStorage.getItem(\"withdrawTransactions\")) || [],\r\n  //   remainingBalance:\r\n  //     JSON.parse(localStorage.getItem(\"remainingBalance\")) || [],\r\n  values: JSON.parse(localStorage.getItem(\"values\")) || [],\r\n  username: localStorage.getItem(\"username\") || [],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n  console.log(\"From Global Context\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      \"depositTransactions\",\r\n      JSON.stringify(state.depositTransactions)\r\n    );\r\n    localStorage.setItem(\r\n      \"withdrawTransactions\",\r\n      JSON.stringify(state.withdrawTransactions)\r\n    );\r\n    localStorage.setItem(\r\n      \"remainingBalance\",\r\n      JSON.stringify(state.remainingBalance)\r\n    );\r\n    localStorage.setItem(\"values\", JSON.stringify(state.values));\r\n  });\r\n\r\n  console.log(initialState);\r\n\r\n  const addDeposit = (depositTransaction) => {\r\n    dispatch({\r\n      type: \"ADD_DEPOSIT\",\r\n      payload: depositTransaction,\r\n    });\r\n  };\r\n\r\n  const addWithdraw = (withdrawTransaction) => {\r\n    dispatch({\r\n      type: \"ADD_WITHDRAW\",\r\n      payload: withdrawTransaction,\r\n    });\r\n  };\r\n\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const totalBalance = (remainingBalance) => {\r\n    dispatch({\r\n      type: \"TOTAL_BALANCE\",\r\n      payload: remainingBalance,\r\n    });\r\n  };\r\n\r\n  const storeInfo = (values) => {\r\n    dispatch({\r\n      type: \"VALUES\",\r\n      payload: values,\r\n    });\r\n  };\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        depositTransactions: state.depositTransactions,\r\n        withdrawTransactions: state.withdrawTransactions,\r\n        username: state.username,\r\n        addDeposit,\r\n        addWithdraw,\r\n        deleteTransaction,\r\n        totalBalance,\r\n        storeInfo,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../stores/GlobalState\";\r\n\r\nconst Balance = () => {\r\n  const { depositTransactions, withdrawTransactions } =\r\n    useContext(GlobalContext);\r\n\r\n  const depositAmounts = depositTransactions.map(\r\n    (depositTransaction) => depositTransaction.depositAmount\r\n  );\r\n\r\n  const withdrawAmounts = withdrawTransactions.map(\r\n    (withdrawTransaction) => withdrawTransaction.withdrawAmount\r\n  );\r\n\r\n  const totalDeposit = depositAmounts\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const totalWithdraw = withdrawAmounts\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const remainingBalance = (totalDeposit - totalWithdraw).toFixed(2);\r\n  console.log(remainingBalance);\r\n\r\n  return (\r\n    <div className=\"balance\">\r\n      <h2>Your Balance</h2>\r\n      <h3 value={remainingBalance}>${remainingBalance}</h3>\r\n      {/* <div className=\"withdrawn-deposit\">\r\n            <div className=\"plus\">\r\n                <h3>Deposited</h3>\r\n                <p>+$.0.00</p>    \r\n            </div>\r\n            <div className=\"minus\">\r\n                <h3>Withdrawn</h3> \r\n                <p>-$0.00</p>   \r\n            </div>       \r\n        </div>     */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { GlobalContext } from \"../stores/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const { addDeposit, addWithdraw, remainingBalance } =\r\n    useContext(GlobalContext);\r\n  //deposit list update\r\n  const [deposit, setDeposit] = useState({\r\n    depositAmount: 0,\r\n  });\r\n  const { depositAmount } = deposit;\r\n  const onChangeDeposit = (e) => {\r\n    setDeposit({ ...deposit, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmitDeposit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (depositAmount > 0) {\r\n      const newDepositTransaction = {\r\n        id: uuidv4(),\r\n        depositAmount: deposit.depositAmount * 1,\r\n      };\r\n      addDeposit(newDepositTransaction);\r\n      setDeposit({\r\n        depositAmount: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  //withdraw list update\r\n  const [withdraw, setWithdraw] = useState({\r\n    withdrawAmount: 0,\r\n  });\r\n  const { withdrawAmount } = withdraw;\r\n  const onChangeWithdraw = (e) => {\r\n    setWithdraw({ ...withdraw, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmitWithdraw = (e) => {\r\n    e.preventDefault();\r\n    if (withdrawAmount > 0) {\r\n      const newWithdrawTransaction = {\r\n        id: uuidv4(),\r\n        withdrawAmount: withdraw.withdrawAmount * 1,\r\n      };\r\n      if (withdrawAmount > remainingBalance) {\r\n        window.alert(\r\n          \"Withdrawal amount must not be greater than total balance.\"\r\n        );\r\n        return false;\r\n      }\r\n      addWithdraw(newWithdrawTransaction);\r\n      setWithdraw({\r\n        withdrawAmount: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <form onSubmit={onSubmitDeposit}>\r\n        <div className=\"input-group deposit\">\r\n          <input\r\n            type=\"number\"\r\n            value={depositAmount}\r\n            name=\"depositAmount\"\r\n            placeholder=\"Deposit amount\"\r\n            autoComplete=\"off\"\r\n            onChange={onChangeDeposit}\r\n          ></input>\r\n          <input type=\"submit\" value=\"submit\" />\r\n        </div>\r\n      </form>\r\n      <form onSubmit={onSubmitWithdraw}>\r\n        <div className=\"input-group withdraw\">\r\n          <input\r\n            type=\"number\"\r\n            value={withdrawAmount}\r\n            name=\"withdrawAmount\"\r\n            placeholder=\"Withdraw amount\"\r\n            autoComplete=\"off\"\r\n            onChange={onChangeWithdraw}\r\n          ></input>\r\n          <input type=\"submit\" value=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../stores/GlobalState'\r\nimport WithdrawTransaction from '../stores/WithdrawTransaction'\r\n\r\nconst WithdrawList = () => {\r\n    const {withdrawTransactions} = useContext(GlobalContext)\r\n\r\n    console.log(withdrawTransactions)\r\n\r\n    return (\r\n        <div className=\"transaction-withdraw\">\r\n            <h2>Transaction History</h2>\r\n            <ul className=\"transaction-list\">\r\n                {withdrawTransactions.map(withdrawTransaction => (\r\n                <WithdrawTransaction key={withdrawTransaction.id} withdrawTransaction = {withdrawTransaction} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WithdrawList","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../stores/GlobalState'\r\nimport DepositTransaction from '../stores/DepositTransaction'\r\n\r\nconst DepositList = () => {\r\n    const {depositTransactions} = useContext(GlobalContext)\r\n\r\n    console.log(depositTransactions)\r\n\r\n    return (\r\n        <div className=\"transaction-deposit\">\r\n            <h2>Transaction History</h2>\r\n            <ul className=\"transaction-list\">\r\n                {depositTransactions.map(depositTransaction => (\r\n                <DepositTransaction key={depositTransaction.id} depositTransaction={depositTransaction} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepositList","import React from \"react\";\r\nimport Header from \"./header\";\r\nimport Balance from \"./balance\";\r\nimport AddTransaction from \"./amount-form\";\r\nimport WithdrawList from \"./withdrawList\";\r\nimport DepositList from \"./depositList\";\r\nimport { GlobalContextProvider } from \"../stores/GlobalState\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import { useEffect, useState } from 'react'\r\n// import UserStore from '../stores/userstore'\r\nimport \"./dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n  //   if (!authorized) {\r\n  //     window.alert(\"User not found.\");\r\n  //     return <Redirect to=\"/login\" />;\r\n  //   }\r\n\r\n  return (\r\n    <GlobalContextProvider>\r\n      <div className=\"dash-container\">\r\n        <div className=\"app-wrapper\">\r\n          <Header />\r\n          <Balance />\r\n          <AddTransaction />\r\n          <DepositList />\r\n          <WithdrawList />\r\n        </div>\r\n      </div>\r\n    </GlobalContextProvider>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport LoginForm from \"../Login/loginform\";\r\nimport Dashboard from \"../Dashboard/dashboard\";\r\nimport RegisterNow from \"../Login/register-link\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../stores/UserSlice\";\r\n\r\nconst App = () => {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route path=\"/bank-app\">{user ? <Dashboard /> : <LoginForm />}</Route>\r\n          <Route path=\"/register-link\">\r\n            <RegisterNow />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../stores/UserSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/app.js\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../src/components/App/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}