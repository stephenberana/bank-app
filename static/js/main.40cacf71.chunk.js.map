{"version":3,"sources":["components/Login/input-field.js","components/Login/submit-button.js","components/stores/userstore.js","components/Login/loginform.js","components/Dashboard/header.js","components/stores/AppReducer.js","components/stores/DepositTransaction.js","components/stores/WithdrawTransaction.js","components/stores/GlobalState.js","components/Dashboard/balance.js","components/Dashboard/amount-form.js","components/Dashboard/withdrawList.js","components/Dashboard/depositList.js","components/Dashboard/dashboard.js","components/Login/user-form.js","components/Login/validate-info.js","components/Login/register-link.js","components/App/app.js","reportWebVitals.js","index.js"],"names":["InputField","className","type","this","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","extendObservable","loading","isLoggedIn","username","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","credentials","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","style","color","href","Header","action","depositTransactions","payload","withdrawTransactions","filter","depositTransaction","id","withdrawTransaction","remainingBalance","DepositTransaction","deleteTransaction","useContext","GlobalContext","depositAmount","WithdrawTransaction","withdrawAmount","initialState","parse","localStorage","getItem","createContext","GlobalContextProvider","children","useReducer","AppReducer","dispatch","useEffect","setItem","Provider","addDeposit","addWithdraw","totalBalance","Balance","depositAmounts","map","withdrawAmounts","reduce","acc","item","toFixed","AddTransaction","useState","deposit","setDeposit","withdraw","setWithdraw","onSubmit","preventDefault","newDepositTransaction","uuidv4","name","autoComplete","newWithdrawTransaction","window","WithdrawList","DepositList","Dashboard","require","React2","React1","UserForm","validate","email","password2","values","setValues","errors","setErrors","handleChange","handleSubmit","validateInfo","test","RegisterNow","htmlFor","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40cacf71.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n                 <input \r\n                    className='input'\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    value={this.props.value}\r\n                    onChange= { (e) => this.props.onChange(e.target.value)}\r\n                    />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\nimport './login.css'\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"submitButton\">\r\n                <button \r\n                    className='submitbtn'\r\n                    disabled={this.props.disabled}\r\n                    onClick={ () => this.props.onClick()}\r\n                >Submit</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;","import { extendObservable } from 'mobx'\r\n\r\n/**\r\n * UserStore\r\n */\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: '',\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\nimport InputField from './input-field';\r\nimport SubmitButton from './submit-button';\r\nimport UserStore from '../stores/userstore'\r\nimport './login.css'\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false,\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 20) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n        resetForm() {\r\n            this.setState({\r\n                username: '',\r\n                password: '',\r\n                buttonDisabled: false\r\n            })\r\n        }\r\n\r\n    async loginUser (credentials) {\r\n        if (!this.state.username) {\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n    try {\r\n\r\n        let res = await fetch('/isLoggedIn', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n        });\r\n\r\n        let result = await res.json();\r\n        if (result && result.success) {\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = true;\r\n            UserStore.username = result.username;\r\n            }\r\n        \r\n            else if (result && result.success === false) {\r\n                UserStore.loading = false;\r\n                UserStore.isLoggedIn = false;\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n        }\r\n    \r\n    catch(e) {\r\n        console.log(e);\r\n        this.resetForm();\r\n    }\r\n}   \r\n\r\n// async logOut(credentials) {\r\n//     try {\r\n    \r\n//         let res = await fetch('/logout', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//             'Accept': 'application/json',\r\n//             'Content-Type': 'application/json'\r\n//         },\r\n//         body: JSON.stringify(credentials)\r\n//     })\r\n    \r\n//     let result = await res.json();\r\n//         if (result && result.success) {\r\n//             UserStore.isLoggedIn = false;\r\n//             UserStore.username = '';\r\n//             }\r\n//         }\r\n    \r\n//         catch(e) {\r\n//             console.log(e);\r\n//         }\r\n//     }\r\n\r\n\r\n    render() {\r\n\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"loginForm\">  \r\n            <h1 className=\"header\">Bank of Wall Street</h1>\r\n            <h2 className=\"header\">Where money never sleeps.</h2>   \r\n               \r\n               Log In\r\n               <InputField\r\n                    className='inputField'\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={ (val) => this.setInputValue('username', val)}\r\n                />\r\n\r\n                <InputField \r\n                    className='inputField'\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password: ''}\r\n                    onChange={ (val) => this.setInputValue('password', val)}\r\n                />\r\n            <div className=\"submitButton\">\r\n                <SubmitButton\r\n                    className='submitbtn'\r\n                    type='button'\r\n                    value='Login'\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick= { () => this.doLogin()}\r\n                />\r\n                </div>\r\n            <div className=\"registerLink\">\r\n                <span className='form-input-signup'>\r\n                Not a member? <br /><a \r\n                    style={{color: 'white'}} \r\n                    href='/register-link'>\r\n                        Register here.</a>\r\n                </span>  \r\n            </div>    \r\n        </div>\r\n    </div>  \r\n        );\r\n    }   \r\n}\r\n    \r\nexport default LoginForm;\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"dash-head-container\">\r\n            <h1> Hi, user! </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_DEPOSIT\":\r\n      return {\r\n        ...state,\r\n        depositTransactions: [action.payload, ...state.depositTransactions],\r\n      };\r\n    case \"ADD_WITHDRAW\":\r\n      return {\r\n        ...state,\r\n        withdrawTransactions: [action.payload, ...state.withdrawTransactions],\r\n      };\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        depositTransactions: state.depositTransactions.filter(\r\n          (depositTransaction) => depositTransaction.id !== action.payload\r\n        ),\r\n        withdrawTransactions: state.withdrawTransactions.filter(\r\n          (withdrawTransaction) => withdrawTransaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"TOTAL_BALANCE\":\r\n      return {\r\n        ...state,\r\n        remainingBalance: [action.payload, ...state.remainingBalance],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from './GlobalState'\r\n\r\nconst DepositTransaction = ({depositTransaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalContext)\r\n    return (\r\n        <div>\r\n            <li className=\"transaction\">\r\n                    <span className=\"transaction-amount\">\r\n                        ${depositTransaction.depositAmount}</span>\r\n                    <button className=\"delete-btn\" \r\n                    onClick={() => deleteTransaction(depositTransaction.id)}>\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepositTransaction","import React, {useContext} from 'react'\r\nimport {GlobalContext} from './GlobalState'\r\n\r\nconst WithdrawTransaction = ({withdrawTransaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalContext)\r\n    return (\r\n        <div>\r\n        <li className=\"transaction\">\r\n                    <span className=\"transaction-amount\">\r\n                        ${withdrawTransaction.withdrawAmount}\r\n                    </span>\r\n                    <button className=\"delete-btn\"\r\n                    onClick={() => deleteTransaction(withdrawTransaction.id)}>\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </li>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default WithdrawTransaction","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport DepositTransaction from \"./DepositTransaction\";\r\nimport WithdrawTransaction from \"./WithdrawTransaction\";\r\nimport Balance from \"../Dashboard/balance\";\r\n\r\nconst initialState = {\r\n  depositTransactions:\r\n    JSON.parse(localStorage.getItem(\"depositTransactions\")) || [],\r\n  withdrawTransactions:\r\n    JSON.parse(localStorage.getItem(\"withdrawTransactions\")) || [],\r\n  //   remainingBalance:\r\n  //     JSON.parse(localStorage.getItem(\"remainingBalance\")) || [],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n  console.log(\"From Global Context\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      \"depositTransactions\",\r\n      JSON.stringify(state.depositTransactions)\r\n    );\r\n    localStorage.setItem(\r\n      \"withdrawTransactions\",\r\n      JSON.stringify(state.withdrawTransactions)\r\n    );\r\n    localStorage.setItem(\r\n      \"remainingBalance\",\r\n      JSON.stringify(state.remainingBalance)\r\n    );\r\n  });\r\n\r\n  const addDeposit = (depositTransaction) => {\r\n    dispatch({\r\n      type: \"ADD_DEPOSIT\",\r\n      payload: depositTransaction,\r\n    });\r\n  };\r\n\r\n  const addWithdraw = (withdrawTransaction) => {\r\n    dispatch({\r\n      type: \"ADD_WITHDRAW\",\r\n      payload: withdrawTransaction,\r\n    });\r\n  };\r\n\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const totalBalance = (remainingBalance) => {\r\n    dispatch({\r\n      type: \"TOTAL_BALANCE\",\r\n      payload: remainingBalance,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        depositTransactions: state.depositTransactions,\r\n        withdrawTransactions: state.withdrawTransactions,\r\n        addDeposit,\r\n        addWithdraw,\r\n        deleteTransaction,\r\n        totalBalance,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../stores/GlobalState\";\r\n\r\nconst Balance = () => {\r\n  const { depositTransactions, withdrawTransactions } =\r\n    useContext(GlobalContext);\r\n\r\n  const depositAmounts = depositTransactions.map(\r\n    (depositTransaction) => depositTransaction.depositAmount\r\n  );\r\n\r\n  const withdrawAmounts = withdrawTransactions.map(\r\n    (withdrawTransaction) => withdrawTransaction.withdrawAmount\r\n  );\r\n\r\n  const totalDeposit = depositAmounts\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const totalWithdraw = withdrawAmounts\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const remainingBalance = (totalDeposit - totalWithdraw).toFixed(2);\r\n  console.log(remainingBalance);\r\n\r\n  return (\r\n    <div className=\"balance\">\r\n      <h2>Your Balance</h2>\r\n      <h3 value={remainingBalance}>${remainingBalance}</h3>\r\n      {/* <div className=\"withdrawn-deposit\">\r\n            <div className=\"plus\">\r\n                <h3>Deposited</h3>\r\n                <p>+$.0.00</p>    \r\n            </div>\r\n            <div className=\"minus\">\r\n                <h3>Withdrawn</h3> \r\n                <p>-$0.00</p>   \r\n            </div>       \r\n        </div>     */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { GlobalContext } from \"../stores/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const { addDeposit, addWithdraw, remainingBalance } =\r\n    useContext(GlobalContext);\r\n  //deposit list update\r\n  const [deposit, setDeposit] = useState({\r\n    depositAmount: 0,\r\n  });\r\n  const { depositAmount } = deposit;\r\n  const onChangeDeposit = (e) => {\r\n    setDeposit({ ...deposit, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmitDeposit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (depositAmount > 0) {\r\n      const newDepositTransaction = {\r\n        id: uuidv4(),\r\n        depositAmount: deposit.depositAmount * 1,\r\n      };\r\n      addDeposit(newDepositTransaction);\r\n      setDeposit({\r\n        depositAmount: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  //withdraw list update\r\n  const [withdraw, setWithdraw] = useState({\r\n    withdrawAmount: 0,\r\n  });\r\n  const { withdrawAmount } = withdraw;\r\n  const onChangeWithdraw = (e) => {\r\n    setWithdraw({ ...withdraw, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmitWithdraw = (e) => {\r\n    e.preventDefault();\r\n    if (withdrawAmount > 0) {\r\n      const newWithdrawTransaction = {\r\n        id: uuidv4(),\r\n        withdrawAmount: withdraw.withdrawAmount * 1,\r\n      };\r\n      if (withdrawAmount > remainingBalance) {\r\n        window.alert(\r\n          \"Withdrawal amount must not be greater than total balance.\"\r\n        );\r\n        return false;\r\n      }\r\n      addWithdraw(newWithdrawTransaction);\r\n      setWithdraw({\r\n        withdrawAmount: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <form onSubmit={onSubmitDeposit}>\r\n        <div className=\"input-group deposit\">\r\n          <input\r\n            type=\"number\"\r\n            value={depositAmount}\r\n            name=\"depositAmount\"\r\n            placeholder=\"Deposit amount\"\r\n            autoComplete=\"off\"\r\n            onChange={onChangeDeposit}\r\n          ></input>\r\n          <input type=\"submit\" value=\"submit\" />\r\n        </div>\r\n      </form>\r\n      <form onSubmit={onSubmitWithdraw}>\r\n        <div className=\"input-group withdraw\">\r\n          <input\r\n            type=\"number\"\r\n            value={withdrawAmount}\r\n            name=\"withdrawAmount\"\r\n            placeholder=\"Withdraw amount\"\r\n            autoComplete=\"off\"\r\n            onChange={onChangeWithdraw}\r\n          ></input>\r\n          <input type=\"submit\" value=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../stores/GlobalState'\r\nimport WithdrawTransaction from '../stores/WithdrawTransaction'\r\n\r\nconst WithdrawList = () => {\r\n    const {withdrawTransactions} = useContext(GlobalContext)\r\n\r\n    console.log(withdrawTransactions)\r\n\r\n    return (\r\n        <div className=\"transaction-withdraw\">\r\n            <h2>Transaction History</h2>\r\n            <ul className=\"transaction-list\">\r\n                {withdrawTransactions.map(withdrawTransaction => (\r\n                <WithdrawTransaction key={withdrawTransaction.id} withdrawTransaction = {withdrawTransaction} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WithdrawList","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../stores/GlobalState'\r\nimport DepositTransaction from '../stores/DepositTransaction'\r\n\r\nconst DepositList = () => {\r\n    const {depositTransactions} = useContext(GlobalContext)\r\n\r\n    console.log(depositTransactions)\r\n\r\n    return (\r\n        <div className=\"transaction-deposit\">\r\n            <h2>Transaction History</h2>\r\n            <ul className=\"transaction-list\">\r\n                {depositTransactions.map(depositTransaction => (\r\n                <DepositTransaction key={depositTransaction.id} depositTransaction={depositTransaction} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepositList","import React from 'react';\r\nimport Header from './header'\r\nimport Balance from './balance'\r\nimport AddTransaction from './amount-form'\r\nimport WithdrawList from './withdrawList'\r\nimport DepositList from './depositList'\r\nimport {GlobalContextProvider} from '../stores/GlobalState'\r\n\r\n// import { useEffect, useState } from 'react'\r\n// import UserStore from '../stores/userstore'\r\nimport './dashboard.css'\r\n\r\n// const {Username} = props\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <GlobalContextProvider>\r\n            <div className=\"dash-container\">\r\n            <div className=\"app-wrapper\"> \r\n                <Header />\r\n                <Balance />\r\n                <AddTransaction />\r\n                <DepositList />\r\n                <WithdrawList />\r\n            </div>\r\n            </div>\r\n            </GlobalContextProvider>           \r\n        )\r\n    }\r\n}   \r\n\r\nexport default Dashboard;","import { useState} from \"react\";\r\n\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);\r\n\r\nfunction UserForm(validate) {\r\n    \r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })       \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setErrors(validate(values))\r\n    }\r\n\r\n        return {handleChange, values, handleSubmit, errors}\r\n    }\r\n    \r\n\r\nexport default UserForm","export default function validateInfo(values) {\r\n    let errors = {}\r\n\r\n    // username\r\n\r\n    if (!values.username.trim()) {\r\n        errors.username = \"Username required\"\r\n    }\r\n\r\n    // email\r\n\r\n    if (!values.email) {\r\n        errors.email = \"Email required\"\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n        errors.email = \"Email address is invalid\"\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Password is required'\r\n    } else if (values.password.length < 8) {\r\n        errors.password = 'Password needs to be 8 characters or more'\r\n    }\r\n\r\n    if (!values.password2) {\r\n        errors.password2 = 'Password is required'\r\n    } else if (values.password2 !== values.password) {\r\n        errors.password2 = 'Passwords do not match'\r\n    }\r\n\r\n    return errors\r\n}","import React from 'react'\r\nimport UserForm from './user-form'\r\nimport validate from './validate-info'\r\nimport './Register.css'\r\n\r\nconst RegisterNow = () => {\r\n        const {handleChange, values, handleSubmit, errors} = UserForm(validate);\r\n\r\n        return (\r\n            <div className=\"base-container\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <div className='header'>\r\n                    <h1>Create your account by filling out \r\n                        the information below.</h1>\r\n                        </div>    \r\n                {/* username */}\r\n                <div className=\"form-inputs\">\r\n                    <label \r\n                        htmlFor='username' \r\n                        className='form-label'>\r\n                    Username        \r\n                    </label>\r\n                    <input \r\n                        id='username'\r\n                        type='text' \r\n                        name='username' \r\n                        className='form-input' \r\n                        placeholder='Enter your username...'\r\n                        value={values.username}\r\n                        onChange={handleChange}/>\r\n                        {errors.username && <p>{errors.username}</p>}\r\n                    </div>\r\n                {/* email      */}\r\n                    <div className=\"form-inputs\">\r\n                    <label \r\n                        htmlFor='email' \r\n                        className='form-label'>\r\n                    Email\r\n                    </label>\r\n                    <input\r\n                        id='email' \r\n                        type='email' \r\n                        name='email' \r\n                        className='form-input' \r\n                        placeholder='Enter your email...'\r\n                        value={values.email}\r\n                        onChange={handleChange}/>\r\n                         {errors.email && <p>{errors.email}</p>}\r\n                    </div>\r\n                    {/* password */}\r\n                    <div className=\"form-inputs\">\r\n                    <label \r\n                        htmlFor='password' \r\n                        className='form-label'>\r\n                    Password\r\n                    </label>\r\n                    <input\r\n                        id= 'password' \r\n                        type='password' \r\n                        name='password' \r\n                        className='form-input' \r\n                        placeholder='Enter your password...'\r\n                        value={values.password}\r\n                        onChange={handleChange}/>\r\n                         {errors.password && <p>{errors.password}</p>}\r\n                    </div>  \r\n                    {/* confirmation of password */}\r\n                    <div className=\"form-inputs\">\r\n                    <label \r\n                        htmlFor='password2' \r\n                        className='form-label'>\r\n                    Confirm Password\r\n                    </label>\r\n                    <input\r\n                        id= 'password2' \r\n                        type='password' \r\n                        name='password2' \r\n                        className='form-input' \r\n                        placeholder='Enter your password...'\r\n                        value={values.password2}\r\n                        onChange={handleChange}/>\r\n                         {errors.password2 && <p>{errors.password2}</p>}\r\n                    </div>\r\n                    <div className='input-btn-cont'>\r\n                    <button className = 'form-input-btn'\r\n                        type='submit'>\r\n                            Sign Up\r\n                        </button>\r\n                        </div>  \r\n                    <div className='register-footer'>\r\n                    <span className='form-input-signup'>\r\n                        Already a member? <br /><a \r\n                            style={{color: 'white'}} \r\n                            href='/bank-app'>\r\n                        Log in here.</a>\r\n                </span>     \r\n                    </div>                           \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default RegisterNow;\r\n","import React from \"react\";\r\nimport LoginForm from \"../Login/loginform\";\r\nimport Dashboard from \"../Dashboard/dashboard\";\r\nimport RegisterNow from \"../Login/register-link\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <Route path=\"/bank-app\">\r\n              <LoginForm />\r\n            </Route>\r\n            <Route path=\"/register-link\">\r\n              <RegisterNow />\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n              <Dashboard />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/app.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}